use_gpu: True
device: 2
seed: 0
early_stop:
  patience: 10
federate:
  mode: standalone
  method: fpl
  client_num: 3
  sample_client_rate: 1.0
  total_round_num: 15
  make_global_eval: False
fedproto:
  proto_weight: 1.0 # the weight of proto loss;
  show_verbose: True # weather display verbose loss information
  n_cls: 10
  infoNCET: 0.02
data:
  root: data/
  type: computers
  splitter: 'louvain'
dataloader:
  type: pyg
  batch_size: 1
MHFL:
  task: node  #TODO: MHFL.task and model.task should only keep one
model:
  type: gcn
  dropout: 0.5
  out_channels: 7
  return_proto: True
  warpFC: True #important
  feature_dim: 64 #important
train:
  local_update_steps: 40
  batch_or_epoch: epoch
  optimizer:
    type: SGD
    lr: 0.25
    weight_decay: 5e-4
criterion:
  type: CrossEntropyLoss
trainer:
  type: fpl_trainer
grad:
  grad_clip: 5.0
eval:
  freq: 1
  metrics: ['acc', 'f1score', 'bac']
  report : ['weighted_avg', 'avg']
  best_res_update_round_wise_key: val_acc
vis_embedding: True
show_client_best_individual: True
show_label_distribution: True